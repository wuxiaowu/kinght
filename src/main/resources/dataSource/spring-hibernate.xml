<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/jee 
			http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:dataSource/jdbc.properties</value>
			</list>
		</property>
	</bean>


	<!-- 配置数据源 -->
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="jdbcUrl">
            <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="initialPoolSize">
            <value>20</value>
        </property>
        <property name="minPoolSize">
            <value>20</value>
        </property>
        <property name="maxPoolSize">
            <value>250</value>
        </property>
        <property name="autoCommitOnClose">
            <value>false</value>
        </property>

        <property name="checkoutTimeout">
            <value>10000</value>
        </property>

        <!--最大空闲的时间，单位是秒，无用的链接再过时后会被回收 Default: 0 -->
        <property name="maxIdleTime">
            <value>60</value>
        </property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement">
            <value>5</value>
        </property>
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts">
            <value>10</value>
        </property>
        <!--如果设为true那么在取得连接的同时将校验连接的有效性。Default: false -->
        <property name="testConnectionOnCheckin">
            <value>true</value>
        </property>
        <property name="maxStatements" value="50"/>
        <!-- false:获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。 -->
        <property name="breakAfterAcquireFailure" value="false"/>
    </bean>
	<!-- 配置 SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!--配置SessionFactory所需的数据源，注入上面定义的dataSource-->
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.kinght.web.sys.domain</value>
			</list>
		</property>
		<!--定义hibernate的SessionFactory的属性-->
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.SQLServerDialect
				hibernate.hbm2ddl.auto=none hibernate.show_sql=false
				hibernate.format_sql=true
				hibernate.cache.use_second_level_cache=false
				hibernate.cache.use_query_cache=false
				hibernate.cache.provider_class=org.hibernate.cache.OSCacheProvider
			</value>
		</property>
	</bean>

	<!-- ############# DAO ######################################################## -->
    <bean id="sysUserDao" class="com.kinght.web.sys.dao.impl.SysUserDaoImpl">
        <property name="dataSource" ref="dataSource"></property>
        <!--<property name="sessionFactory" ref="sessionFactory_otrs">
            </property>
        -->

    </bean>
    <bean id="gongXianExchangeDao" class="com.kinght.shop.gongxian.dao.impl.GongXianExchangeDaoImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


</beans>